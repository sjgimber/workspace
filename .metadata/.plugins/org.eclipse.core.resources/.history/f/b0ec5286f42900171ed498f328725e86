package Pages;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

public class loginPOM 
{
	// Firstly, identify the controls on this screen.
	@FindBy(id="username") WebElement txtUsername;					// "Username" field.
	@FindBy(id="password") WebElement txtPassword;					// "Password" field.
	@FindBy(id="submit") WebElement btnLogin;						// <Login> button.
	@FindBy(id="validationError") WebElement lblValidationMessage;	// The validation message area.

	// Now define our functions which interact with this screen.
	
	public void loginWithCredentials(String username, String password)
	{
		// This function will set the Username and Password fields to the selected values, then click on the <Login> button.
		
		// Set the username...
		txtUsername.clear();
		txtUsername.sendKeys(username);
		
		// Set the password...
		txtPassword.clear();
		txtPassword.sendKeys(password);
		
		// Click on <Login>...
		btnLogin.click();
	}
	
	public boolean isValidationErrorShown()
	{
		// This function will check the contents of the "validationError" paragraph, and:
		// - return TRUE if the message is "Error"
		// - return FALSE if the message is "Welcome"
		String message = lblValidationMessage.getText();
		System.out.println("Validation Message is " + message);
		return true;
	}
}
